 pipeline {
    agent any
    environment {
            GIT_REPO_NAME = "CICD-Project"
            GIT_USER_NAME = "ganesh5124"
            SONARQUBE_URL = "http://43.205.243.64:9000"
            SONARQUBE_TOKEN = "squ_caea103628bf35ee265caea2e6c2393a1a1fd127"
            ANSIBLE_HOST_KEY_CHECKING = 'False'
        }
    stages {
       
        stage('Checkout Code') {
            steps {
                echo 'scm git'
                git branch: 'main', changelog: false, credentialsId: 'github-Id', poll: false, url: 'https://github.com/ganesh5124/CICD-Project.git'
            }
        }
        stage('Build Artifact'){
          steps {
            echo 'install the package into the local repository'
            sh 'cd Application && mvn clean install'
          }
        }
        stage('sonar') {
            steps {
                echo 'scanning project'
                sh 'ls -ltr'
                sh '''cd Application && mvn sonar:sonar \\
                      -Dsonar.host.url=${SONARQUBE_URL}\\
                      -Dsonar.login=${SONARQUBE_TOKEN}'''
            }
    	}
       stage('Build docker image'){
            steps{
                script{
                    echo 'docker image build'
					          sh 'cd Application && docker build -t ganesh5124/webapp:${BUILD_NUMBER} .'
                }
            }
        }
       stage('docker image scan'){
        steps{
            sh "trivy image ganesh5124/webapp:${BUILD_NUMBER}"
        }
    }		
		 stage('Push image to Hub'){
            steps{
                script{
                   withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerhub')]) {
                   sh 'docker login -u ganesh5124 -p ${dockerhub}'
              }
                   sh 'docker push ganesh5124/webapp:${BUILD_NUMBER}'
                }
            }
        }
      stage('Update kubernetes Deployment manifest File') {
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config --global user.email "pvgkumar2001@gmail.com"
                    git config --global user.name "ganesh5124"
                    sed -i "s/webapp:.*/webapp:${BUILD_NUMBER}/g" "K8's/deploy.yaml"
                    git add .
                    git commit -m "Update deployment image tag to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }

    stage('k8s Deployment using ansible'){
            steps{
              
                    script{
                              ansiblePlaybook credentialsId: 'ssh', 
                                        disableHostKeyChecking: true, 
                                        installation: 'ansible', 
                                        inventory: '/etc/ansible/', 
                                        playbook: 'Ansible/playbook.yaml'
                        }
            }
        }
}
}